[] 8 10 + + .miArreglo
$miArreglo println

$miArreglo 0 "HOLA" set
$miArreglo println

"Hola " 
"Pepito" 
+
println


[] 
    "Hola" + 
    10 +
    "Todo bien?" +
    "Mi nombre es Pepe" +

0 { índice en el arreglo }

:bucle { arreglo, índice }
    (2dup) at println
    1 +
    1000 sleep
    over len over swap < @bucle
drop 0 @bucle

:2dup
    over over return




100 .pos 
500 .meta 

:iter 
    $pos 100 + .pos 
$pos $meta < @iter

{Esto es un comentario}
"FIN: " print $pos println

(pepito) {Esto es otro comentario}

"El factorial es: " print 9 (factorial) println
"El factorial es: " print 9 (factorial-2) println
"El factorial es: " print 9 (factorial-3) println 

"Fib 0: " print 0 (fib) println
"Fib 1: " print 1 (fib) println
"Fib 2: " print 2 (fib) println
"Fib 3: " print 3 (fib) println
"Fib 4: " print 4 (fib) println
"Fib 5: " print 5 (fib) println
"Fib 6: " print 30 (fib) println
"Fib2 30: " print 30 (fib2) println 
"Fib3 30: " print 30 (fib3) println 

[] 10 +
   "Hola" + 
   15 +
[] ":)" +
   ":O" +
+ .arreglo

"EL ARREGLO: " print $arreglo println
"LARGO: " print $arreglo len println

$arreglo 0 
"ITER ------------" println
:impr
    " >> " print 
    over over at println
    1 +
    over len over swap < @impr
drop println

exit

:fib3
    duplicate 2 < return
    2 - 1 1 rot
    :fib3-iter
        rot rot swap over + 
        rot 1 - duplicate
    0 > @fib3-iter
    drop swap drop return

:fib2
    duplicate 2 < return
    2 - .R0
    1 1
    :fib2-iter
        swap over + 
        $R0 1 - .R0
    $R0 0 > @fib2-iter
    swap drop return

:fib
    duplicate 1 <= return
    $R0 swap .R0
    $R0 1 - (fib) 
    $R0 2 - (fib)
    + 
    swap .R0
    return


:pepito
    10 20 + .hola
    "Hola es: " print $hola println
    return


:factorial 
    duplicate 1 <= return
    duplicate 1 - (factorial) * return

:factorial-2
    duplicate .factorial-2.i
    :factorial-2-iter
        duplicate 1 - $factorial-2.i * .factorial-2.i
        1 - 
        duplicate 1 > @factorial-2-iter
    $factorial-2.i * return


:factorial-3
    duplicate 
    duplicate 1 -
    :factorial-3-iter
        * swap 1 - swap over 1 -
        duplicate 1 > @factorial-3-iter
    drop over drop return
